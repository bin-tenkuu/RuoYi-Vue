<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.common.mapper.SysMenuMapper">
    <resultMap id="BaseResultMap" type="com.ruoyi.common.entity.SysMenu">
        <!--@Table sys_menu -->
        <id property="menuId" column="menu_id"/>
        <result property="menuName" column="menu_name"/>
        <result property="parentId" column="parent_id"/>
        <result property="orderNum" column="order_num"/>
        <result property="path" column="path"/>
        <result property="component" column="component"/>
        <result property="query" column="query"/>
        <result property="isFrame" column="is_frame"/>
        <result property="isCache" column="is_cache"/>
        <result property="menuType" column="menu_type"/>
        <result property="visible" column="visible"/>
        <result property="status" column="status"/>
        <result property="perms" column="perms"/>
        <result property="icon" column="icon"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="remark" column="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        menu_id, menu_name, parent_id, order_num, path, component, `query`, is_frame, is_cache, menu_type,
            visible, status, perms, icon, create_time, update_time, create_by, update_by, remark
    </sql>

    <select id="selectMenuList" parameterType="com.ruoyi.common.entity.SysMenu" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_menu
        <where>
            <if test="menuName != null and menuName != ''">
                AND menu_name like concat('%', #{menuName}, '%')
            </if>
            <if test="visible != null and visible != ''">
                AND visible = #{visible}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        order by parent_id, order_num
    </select>

    <select id="selectMenuTreeAll" resultMap="BaseResultMap">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status,
            m.perms as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from sys_menu m
        where m.menu_type in ('M', 'C') and m.status = 0
        order by m.parent_id, m.order_num
    </select>

    <select id="selectMenuListByUserId" resultMap="BaseResultMap">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status,
            m.perms as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
                 left join sys_user_role ur on rm.role_id = ur.role_id
                 left join sys_role ro on ur.role_id = ro.role_id
        where ur.user_id = #{userId}
        <if test="menu.menuName != null and menu.menuName != ''">
            AND m.menu_name like concat('%', #{menu.menuName}, '%')
        </if>
        <if test="menu.visible != null and menu.visible != ''">
            AND m.visible = #{menu.visible}
        </if>
        <if test="menu.status != null and menu.status != ''">
            AND m.status = #{menu.status}
        </if>
        order by m.parent_id, m.order_num
    </select>

    <select id="selectMenuTreeByUserId" parameterType="Long" resultMap="BaseResultMap">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status,
            m.perms as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
                 left join sys_user_role ur on rm.role_id = ur.role_id
                 left join sys_role ro on ur.role_id = ro.role_id
                 left join sys_user u on ur.user_id = u.user_id
        where u.user_id = #{userId} and m.menu_type in ('M', 'C') and m.status = 0 AND ro.status = 0
        order by m.parent_id, m.order_num
    </select>

    <select id="selectMenuListByRoleId" resultType="Long">
        select m.menu_id
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
        where rm.role_id = #{roleId}
        <if test="menuCheckStrictly">
            and m.menu_id not in (select m.parent_id
                                  from sys_menu m
                                           inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = #{roleId})
        </if>
        order by m.parent_id, m.order_num
    </select>

    <select id="selectMenuPermsByUserId" parameterType="Long" resultType="String">
        select distinct m.perms
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
                 left join sys_user_role ur on rm.role_id = ur.role_id
                 inner join sys_role r on r.role_id = ur.role_id and r.status = 0
        where m.status = 0 and ur.user_id = #{userId}
    </select>

    <select id="selectMenuPermsByRoleId" parameterType="Long" resultType="String">
        select distinct m.perms
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
        where m.status = 0 and rm.role_id = #{roleId}
    </select>

    <select id="hasChildByMenuId" resultType="Integer">
        select count(*)
        from sys_menu
        where parent_id = #{menuId}
    </select>

    <select id="checkMenuNameUnique" resultType="_long">
        select
        <include refid="Base_Column_List"/>
        from sys_menu
        where menu_name = #{menuName} and parent_id = #{parentId}
        limit 1
    </select>
</mapper>
